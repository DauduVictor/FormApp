@model FormApplication.Models.FormModel

@{
    ViewBag.Title = "FormCreate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Welcome</h2>


@using (Html.BeginForm("ProcessNewForm","Forms", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Registration Form</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control dropdown " name="Gender" id="Gender">
                @foreach (var item in ViewBag.gender)
                {
                    <option value="@item.GenderId">@item.GenderType</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.HouseNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control dropdown " name="HouseNumber" id="HouseNumber" onchange="">
                @foreach (var item in ViewBag.housebatch)
                {
                    <option id="house_@item.HouseId" value="@item.HouseId">@item.HouseUnit</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Profession, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control dropdown " name="Status" id="Status" onchange="">
                @foreach (var item in ViewBag.status)
                {
                    <option value="@item.StatusId">@item.StatusType</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>


    <div id="spouseinfo">

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-default" onclick="addfields()" type="button"> Add Spouse</button>
            <button class="btn btn-danger" onclick="removefields()" type="button" style="display:none" id="removespouse"> Remove Spouse</button>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
<script>
    var spouseinfo = document.querySelector('#spouseinfo');
    var removespouse = document.querySelector('#removespouse');
    var spousenumber = 1;
@*function addfields()
    {
        var spouseinfohtml = `
            <div>
        <p> Add a new Spouse</p>
       <input type="hidden" value="-1" name="SpouseId">
    <div class="form-group">
        @Html.LabelFor(model => model.Names, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Names, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Names, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GenderType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control dropdown " name="GenderType" id="Genders">
                @foreach (var item in ViewBag.gender)
                {
                    <option value="@item.GenderId">@item.GenderType</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.GenderType, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
        `
        spouseinfo.innerHTML += spouseinfohtml;
        if (spouseinfo.childElementCount === 1) {
            removespouse.style.display = 'inline-block';
        }
        spousenumber++;
    }*@
    function addfields()
    {
        var spouseinfohtml = document.createElement('div');
        spouseinfohtml.innerHTML = `
            <div>
        <p> Add a new Spouse</p>
    <input type="hidden" value="-1" name="SpouseId">
    <div class="form-group">
        @Html.LabelFor(model => model.Names, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Names, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Names, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GenderType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control dropdown " name="GenderType" id="Genders">
                @foreach (var item in ViewBag.gender)
                {
                    <option value="@item.GenderId">@item.GenderType</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.GenderType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
        `

        spouseinfo.appendChild(spouseinfohtml);

        if (spouseinfo.childElementCount === 1) {
            removespouse.style.display = 'inline-block';
        }
        spousenumber++;
    }
    function removefields()
    {
        spouseinfo.removeChild(spouseinfo.lastElementChild);

        if (spouseinfo.childElementCount < 1) {
            removespouse.style.display = 'none';
        }
    }
</script>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
