@model FormApplication.Models.SpouseModel

@{
    ViewBag.Title = "SpouseEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>SpouseEdit</h2>

@using (Html.BeginForm("SaveSpouseEdit", "Forms", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SpouseModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" hidden>
            @Html.LabelFor(model => model.SpouseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" hidden>
                @Html.EditorFor(model => model.SpouseId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpouseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.FormId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" hidden>
                @Html.EditorFor(model => model.FormId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FormId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Names, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Names, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Names, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenderType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control dropdown " name="GenderType" id="GenderType">
                    @foreach (var item in ViewBag.gender)
                    {
                        if (Model.GenderType == item.GenderType)
                        {
                            <option value="@item.GenderId" selected>@item.GenderType</option>
                        }
                        else
                        {
                            <option value="@item.GenderId">@item.GenderType</option>
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.GenderType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
